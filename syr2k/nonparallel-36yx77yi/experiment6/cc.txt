(cd /home/meinersbur/scratch/mctree-exec/mctree-36yx77yi/experiment6 && /home/meinersbur/install/llvm-project/release/bin/clang /home/meinersbur/scratch/mctree-exec/mctree-36yx77yi/experiment6/syr2k.c /home/meinersbur/scratch/mctree-exec/mctree-36yx77yi/experiment6/polybench.c -Wall -Werror=unknown-pragmas -mllvm -debug-only=polly-ast -O3 -march=native -mllvm -polly-only-func=kernel_syr2k -DEXTRALARGE_DATASET -DPOLYBENCH_USE_C99_PROTO -iquote /home/meinersbur/src/mctree -iquote /home/meinersbur/src/mctree/syr2k -iquote /home/meinersbur/src/mctree/syr2k -mllvm -polly -mllvm -polly-process-unprofitable -mllvm -polly-position=early -mllvm -polly-reschedule=0 -mllvm -polly-pattern-matching-based-opts=0 -fopenmp -mllvm -polly-omp-backend=LLVM -Werror=pass-failed -o /home/meinersbur/scratch/mctree-exec/mctree-36yx77yi/experiment6/syr2k)
[stderr] :: isl ast :: kernel_syr2k :: %entry.split---%for.end57
[stderr] [p_0, p_1] -> {  : -2147483648 <= p_0 <= 2147483647 and -2147483648 <= p_1 <= 2147483647 }
[stderr] { domain: "[p_0, p_1] -> { Stmt3[i0, i1] : i0 < p_0 and 0 <= i1 <= i0; Stmt11[i0, i1, i2] : i0 < p_0 and 0 <= i1 < p_1 and 0 <= i2 <= i0 }", child: { sequence: [ { filter: "[p_0, p_1] -> { Stmt3[i0, i1] }", child: { mark: "Loop: loop1", child: { schedule: "[p_0, p_1] -> [{ Stmt3[i0, i1] -> [(i0)] }]", child: { mark: "Loop: loop2", child: { schedule: "[p_0, p_1] -> [{ Stmt3[i0, i1] -> [(i1)] }]" } } } } }, { filter: "[p_0, p_1] -> { Stmt11[i0, i1, i2] }", child: { mark: "Loop: loop306", child: { schedule: "[p_0, p_1] -> [{ Stmt11[i0, i1, i2] -> [(floor((i0)/1024))] }]", child: { mark: "Loop: loop296", child: { schedule: "[p_0, p_1] -> [{ Stmt11[i0, i1, i2] -> [(floor((i1)/16))] }]", child: { mark: "Loop: loop282", child: { schedule: "[p_0, p_1] -> [{ Stmt11[i0, i1, i2] -> [(floor((i2)/64))] }]", child: { mark: "Loop: loop307", child: { schedule: "[p_0, p_1] -> [{ Stmt11[i0, i1, i2] -> [((i0) mod 1024)] }]", child: { mark: "Loop: loop297", child: { schedule: "[p_0, p_1] -> [{ Stmt11[i0, i1, i2] -> [((i1) mod 16)] }]", child: { mark: "Loop: loop283", child: { schedule: "[p_0, p_1] -> [{ Stmt11[i0, i1, i2] -> [((i2) mod 64)] }]" } } } } } } } } } } } } } ] } }
[stderr] if (1 && 0 == (p_0 <= -1 || p_1 <= -1) && (&MemRef2[p_0 - 1][p_1] <= &MemRef0[0][0] || &MemRef0[p_0 - 1][p_0] <= &MemRef2[0][0]) && (&MemRef4[p_0 - 1][p_1] <= &MemRef0[0][0] || &MemRef0[p_0 - 1][p_0] <= &MemRef4[0][0]))
[stderr] 
[stderr]     {
[stderr]       // Loop: loop1
[stderr]       for (int c0 = 0; c0 < p_0; c0 += 1) {
[stderr]         // Loop: loop2
[stderr]         for (int c1 = 0; c1 <= c0; c1 += 1)
[stderr]           Stmt3(c0, c1);
[stderr]       }
[stderr]       // Loop: loop306
[stderr]       for (int c0 = 0; c0 <= floord(p_0 - 1, 1024); c0 += 1) {
[stderr]         // Loop: loop296
[stderr]         for (int c1 = 0; c1 <= floord(p_1 - 1, 16); c1 += 1) {
[stderr]           // Loop: loop282
[stderr]           for (int c2 = 0; c2 <= min(16 * c0 + 15, (p_0 - 1) / 64); c2 += 1) {
[stderr]             // Loop: loop307
[stderr]             for (int c3 = max(0, -1024 * c0 + 64 * c2); c3 <= min(1023, p_0 - 1024 * c0 - 1); c3 += 1) {
[stderr]               // Loop: loop297
[stderr]               for (int c4 = 0; c4 <= min(15, p_1 - 16 * c1 - 1); c4 += 1) {
[stderr]                 // Loop: loop283
[stderr]                 for (int c5 = 0; c5 <= min(63, 1024 * c0 - 64 * c2 + c3); c5 += 1)
[stderr]                   Stmt11(1024 * c0 + c3, 16 * c1 + c4, 64 * c2 + c5);
[stderr]               }
[stderr]             }
[stderr]           }
[stderr]         }
[stderr]       }
[stderr]     }
[stderr] 
[stderr] else
[stderr]     {  /* original code */ }
[stderr] 
Exit with code 0 in 0:00:00.356243
